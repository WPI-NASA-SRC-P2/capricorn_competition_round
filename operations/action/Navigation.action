# Define the goal
float32 forward_velocity  # NAV_TYPE::MANUAL and NAV_TYPE::REVOLVE
float32 angular_velocity  # Positive is counterclockwise, negative is clockwise
float32 direction         # For use with forward_velocity. Direction to point the robot. 0-2PI, where 0 is straight forwards relative to the robot, CCW from above.
float32 epsilon           # Distance in m to be used as a threshold to determine whether or not the robot has reached a given waypoint. Defaults to 0.5
bool final_rotate         # Choice to whether or not the robot needs to face the goal's final heading. Deafults to false

geometry_msgs/PoseStamped pose   # NAV_TYPE::GOAL

geometry_msgs/PointStamped point # NAV_TYPE::REVOLVE


uint32 drive_mode              # Whether or not this is a manual drive. Corresponds to COMMON_NAMES::NAV_TYPE
---
# Define the result
# See COMMON_NAMES::COMMON_RESULT for possible values
uint32 result
---
# Define a feedback message
float32 percent_complete