<?xml version="1.0"?>
<!--
	Space Robotics Challenge (2)
	NASA-JSC
	Copyright (c) 2019, All Rights Reserved
	Unauthorized distribution strictly prohibited

	This XACRO file defines the small robot's sensors
-->
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- We do not control the lidar plugin directly, so must choose whether to use noise or not here -->
  <!-- <xacro:if value="${(arg use_noise) == 'false'}"/>
    <xacro:property name="lidar_noise_sigma" value="0.0" /> 
  </xacro:if> -->

  <xacro:arg name="use_noise" default="true" />
  <xacro:property name="lidar_noise_sigma" value="0.0" /> 
  <xacro:property name="imu_noise_sigma" value="0.0" /> 

  <xacro:if value="$(arg use_noise)">
    <xacro:property name="lidar_noise_sigma" value="0.15" /> 
    <xacro:property name="imu_noise_sigma" value="0.05" /> 
  </xacro:if>

   <!-- Hokuyo Lidar Laser -->
  <gazebo reference="$(arg rover_name)_lidar_link">
    <sensor name="head_hokuyo_sensor" type="ray">
      <pose>0 0 0.0 0 0 ${pi/2}</pose>
      <visualize>false</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>100</samples>
            <resolution>1</resolution>
            <min_angle>-1.3</min_angle>
            <max_angle>1.3</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.0</min>
          <max>15.0</max>
          <resolution>0.1</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>${lidar_noise_sigma}</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_lidar_controller" filename="libgazebo_ros_laser.so" >
        <topicName>laser/scan</topicName>
        <frameName>/$(arg rover_name)_lidar_link</frameName>
        <pose>0 0 0.0 0 0 ${pi/2}</pose>
      </plugin>
    </sensor>
  </gazebo>


  <!-- This is the stereo camera -->
  <!-- Stereo Camera Optical Left  -->
  <gazebo reference="$(arg rover_name)_left_camera_optical">
    <sensor type="camera" name="stereo_camera_left">
      <update_rate>10.0</update_rate>
      <camera name="camera/left">
        <pose>0 0 0 1.57 -1.57 0</pose>
        <horizontal_fov>1.3962634</horizontal_fov> 
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>500</far>
        </clip>
      </camera>

      <plugin name="left_camera_controller" filename="libSpaceCamera.so">
        <cameraName>camera/left</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>/$(arg rover_name)_left_camera_optical</frameName>
        <hackBaseline>0.0</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

   <!-- Stereo Camera Optical Right  -->
  <gazebo reference="$(arg rover_name)_right_camera_optical">
    <sensor type="camera" name="stereo_camera_right">
      <update_rate>10.0</update_rate>
      <camera name="camera/right">
        <pose>0 0 0 1.57 -1.57 0</pose>
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>500</far>
        </clip>
      </camera>

      <plugin name="right_camera_controller" filename="libSpaceCamera.so">
        <cameraName>camera/right</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>/$(arg rover_name)_right_camera_optical</frameName>
        <hackBaseline>0.21</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>


  <gazebo reference="$(arg rover_name)_imu_link">
    <!-- SOURCE CODE: https://github.com/ros-simulation/gazebo_ros_pkgs/tree/kinetic-devel/gazebo_plugins/src
      file: gazebo_ros_imu_sensor.cpp
    -->
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <plugin filename="libImuSensor.so" name="imu_plugin">
        <topicName>imu</topicName>
        <updateRateHZ>100.0</updateRateHZ>
        <gaussianNoise>${imu_noise_sigma}</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>/$(arg rover_name)_imu_link</frameName>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>



</robot>
